{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/postsReducer.js","images/memories.png","components/Form/styles.js","api/index.js","components/Form/Form.js","actions/postsActions.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","styles.js","App.js","index.js"],"names":["FETCH_ALL","CREATE","UPDATE","LIKE","DELETE","combineReducers","posts","type","payload","map","post","_id","filter","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","url","newPost","data","axios","patchPost","id","patch","removePost","delete","likePost","Form","currentId","setCurrentId","classes","useStyles","useState","creator","title","message","tags","selectedFile","postData","setPostData","useSelector","state","find","p","dispatch","useDispatch","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","updateData","preventDefault","a","api","console","log","createPost","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","Button","color","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","passPostToForm","Card","CardMedia","image","moment","createdAt","fromNow","style","fontSize","component","tag","gutterBottom","CardContent","CardActions","likeCount","mainContainer","alignItems","smMargin","actionDiv","textAlign","Posts","length","Grid","container","item","xs","sm","md","CircularProgress","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d910df1.chunk.js","sourcesContent":["export const FETCH_ALL = 'FETCH_ALL'\r\nexport const CREATE = 'CREATE'\r\nexport const UPDATE = 'UPDATE'\r\nexport const LIKE = 'LIKE'\r\nexport const DELETE = 'DELETE'","import { combineReducers } from \"redux\";\r\nimport { postsReducer } from \"./postsReducer\";\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n});\r\n","import { AccordionActions } from \"@material-ui/core\";\r\nimport { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE } from \"../constants/actionTypes\";\r\n\r\nexport const postsReducer = (posts = [], { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_ALL: {\r\n      return payload;\r\n    }\r\n    case CREATE: {\r\n      return [...posts, payload];\r\n    }\r\n    case UPDATE: {\r\n      return posts.map((post) => (post._id === payload._id ? payload : post));\r\n    }\r\n    case DELETE: {\r\n      return posts.filter((post) => post._id !== payload);\r\n    }\r\n    case LIKE: {\r\n      return posts.map((post) => (post._id === payload._id ? payload : post));\r\n    }\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import axios from \"axios\";\r\n\r\nconst url = \"http://localhost:5000/posts\";\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\n\r\nexport const newPost = (data) => axios.post(url, data);\r\n\r\nexport const patchPost = (id, data) => axios.patch(url + `/${id}`, data);\r\n\r\nexport const removePost = (id) => axios.delete(url + `/${id}`);\r\n\r\nexport const likePost = (id, data) => axios.patch(url + `/${id}`, data);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport useStyles from \"./styles\";\r\nimport { createPost, updatePost } from \"../../actions/postsActions\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  // const { root, paper, form, fileInput, buttonSubmit } = useStyles();\r\n  const classes = useStyles();\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setPostData(post);\r\n    }\r\n    else {\r\n      clear()\r\n    }\r\n  }, [post, currentId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n    clear();\r\n  };\r\n\r\n  const clear = () => {\r\n    setCurrentId(null);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId && post ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import * as api from \"../api\";\r\nimport { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE } from \"../constants/actionTypes\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    // console.log(data);\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (postData) => async (dispatch) => {\r\n  try {\r\n    console.log(postData);\r\n    const { data } = await api.newPost(postData);\r\n    // console.log(data)\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, updateData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.patchPost(id, updateData);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.removePost(id);\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id, likeCount) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id, likeCount);\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n  border: {\r\n    border: \"solid\",\r\n  },\r\n  fullHeightCard: {\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"15px\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  overlay2: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    right: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px\",\r\n  },\r\n  title: {\r\n    padding: \"0 16px\",\r\n  },\r\n  cardActions: {\r\n    padding: \"0 16px 8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useStyles from \"./styles\";\r\nimport { deletePost, likePost } from \"../../../actions/postsActions\";\r\n\r\nconst Post = ({ post, setCurrentId, passPostToForm }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={\r\n          post.selectedFile ||\r\n          \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n        }\r\n        title={post.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\" }}\r\n          size=\"small\"\r\n          onClick={() => {\r\n            console.log(post);\r\n            setCurrentId(post._id);\r\n            passPostToForm(post);\r\n          }}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n          {post.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography\r\n        className={classes.title}\r\n        gutterBottom\r\n        variant=\"h5\"\r\n        component=\"h2\"\r\n      >\r\n        {post.title}\r\n      </Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {post.message}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            dispatch(likePost(post._id, { likeCount: post.likeCount + 1 }))\r\n          }\r\n        >\r\n          <ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount}{\" \"}\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(deletePost(post._id))}\r\n        >\r\n          <DeleteIcon fontSize=\"small\" /> Delete\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n// const {\r\n//   media,\r\n//   border,\r\n//   fullHeightCard,\r\n//   card,\r\n//   overlay,\r\n//   overlay2,\r\n//   grid,\r\n//   details,\r\n//   title,\r\n//   cardActions,\r\n// } = useStyles();\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Posts = ({ setCurrentId, passPostToForm }) => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n\r\n  return !posts.length ? (\r\n    posts.length!==0 ? <CircularProgress /> : <p>No Post. Create One!</p>\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={6} md={6}>\r\n          {/* {passPostToForm(post)} */}\r\n          <Post post={post} setCurrentId={setCurrentId} passPostToForm={passPostToForm}/>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    color: \"rgba(0,183,255, 1)\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    mainContainer: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport memories from \"./images/memories.png\";\nimport Form from \"./components/Form/Form\";\nimport Posts from \"./components/Posts/Posts\";\nimport useStyles from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"./actions/postsActions\";\n\nconst App = () => {\n  const { appBar, heading, image, mainContainer } = useStyles();\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const [post, setPost] = useState({});\n\n  const passPostToForm = (data) => {\n    // setPost(data);\n    // console.log(post);\n  };\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={appBar} position=\"static\" color=\"inherit\">\n        <Typography className={heading} variant=\"h2\" align=\"center\">\n          Memories\n        </Typography>\n        <img className={image} src={memories} alt=\"memories\" height=\"60\" />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            className={mainContainer}\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts\n                setCurrentId={setCurrentId}\n                passPostToForm={passPostToForm}\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form\n                currentId={currentId}\n                setCurrentId={setCurrentId}\n                post={post}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}